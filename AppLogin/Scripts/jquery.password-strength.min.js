(function ($) {
    var password_Strength = new function () {
        this.countRegExp = function (passwordVal, regx) {
            var match = passwordVal.match(regx);
            return match ? match.length : 0;
        };
        this.getStrengthInfo = function (passwordVal) {
            var len = passwordVal.length;
            var pStrength = 0;
            var msg = "",
                    inValidChars = "";
            var allowableSpecilaChars = new RegExp("[" + password_settings.specialChars + "]", "g");
            var nums = this.countRegExp(passwordVal, /\d/g),
                    lowers = this.countRegExp(passwordVal, /[a-z]/g),
                    uppers = this.countRegExp(passwordVal, /[A-Z]/g),
                    specials = this.countRegExp(passwordVal, allowableSpecilaChars),
                    spaces = this.countRegExp(passwordVal, /\s/g);
            inValidChars = passwordVal.replace(/[a-z]/gi, "") + inValidChars.replace(/\d/g, "");
            inValidChars = inValidChars.replace(/\d/g, "");
            inValidChars = inValidChars.replace(allowableSpecilaChars, "");
            if (spaces > 0) {
                return "No spaces!";
            }
            if (inValidChars !== "") {
                return "Invalid character: " + inValidChars;
            }
            if (len > password_settings.maxLength) {
                return "Password too long!";
            }
            if ((specials + uppers + nums + lowers) < password_settings.minLength) {
                msg += password_settings.minLength - (specials + uppers + nums + lowers) + " more characters, ";
            }
            if (specials < password_settings.specialLength || uppers < password_settings.upperLength || nums < password_settings.numberLength || lowers == 0) {
                msg += "At least ";
            }
            if (nums >= password_settings.numberLength) {
                nums = password_settings.numberLength;
            } else {
                msg += (password_settings.numberLength - nums) + " more numbers, ";
            } if (specials >= password_settings.specialLength) {
                specials = password_settings.specialLength;
            } else {
                msg += (password_settings.specialLength - specials) + " more symbol, ";
            } if (uppers >= password_settings.upperLength) {
                uppers = password_settings.upperLength;
            } else {
                msg += (password_settings.upperLength - uppers) + " Upper case characters, ";
            } if ((len - (uppers + specials + nums)) >= (password_settings.minLength - password_settings.numberLength - password_settings.specialLength - password_settings.upperLength)) {
                pStrength += (password_settings.minLength - password_settings.numberLength - password_settings.specialLength - password_settings.upperLength);
            } else {
                pStrength += (len - (uppers + specials + nums));
            }
            pStrength += uppers + specials + nums;
            if (lowers === 0) {
                if (pStrength > 1) {
                    pStrength -= 1;
                }
                msg += "1 lower case character, ";
            }
            if (pStrength == password_settings.minLength && lowers > 0) {
                msg = "Strong password!";
            }
            return msg + ";" + pStrength;
        };
    };
    var password_settings = {
        minLength: 12,
        maxLength: 25,
        specialLength: 1,
        upperLength: 1,
        numberLength: 1,
        barWidth: 200,
        barColor: "Red",
        specialChars: "!@#$",
        metRequirement: false,
        useMultipleColors: 0
    };
    $.fn.password_strength = function (options) {
        this.metReq = function () {
            return password_settings.metRequirement;
        };
        $.ajax({
            type: "GET",
            url: "../PasswordPolicy.xml",
            dataType: "xml",
            success: function (xml) {
                $(xml).find("Password").each(function () {
                    var _minLength = $(this).find("minLength").text(),
                        _maxLength = $(this).find("maxLength").text(),
                        _numsLength = $(this).find("numsLength").text(),
                        _upperLength = $(this).find("upperLength").text(),
                        _specialLength = $(this).find("specialLength").text(),
                        _barWidth = $(this).find("barWidth").text(),
                        _barColor = $(this).find("barColor").text(),
                        _specialChars = $(this).find("specialChars").text(),
                        _useMultipleColors = $(this).find("useMultipleColors").text();
                    password_settings.minLength = parseInt(_minLength);
                    password_settings.maxLength = parseInt(_maxLength);
                    password_settings.specialLength = parseInt(_specialLength);
                    password_settings.upperLength = parseInt(_upperLength);
                    password_settings.numberLength = parseInt(_numsLength);
                    password_settings.barWidth = parseInt(_barWidth);
                    password_settings.barColor = _barColor;
                    password_settings.specialChars = _specialChars;
                    password_settings.useMultipleColors = _useMultipleColors;
                });
            }
        });
        return this.each(function () {
            var barLeftPos = $("[id$='" + this.id + "']").position().left; //+ $("[id$='" + this.id + "']").width();
            var barTopPos = $("[id$='" + this.id + "']").position().top; //+ $("[id$='" + this.id + "']").height();
            var maincontainer = $('<div class="cont_100"></div>').css({ position: "relative" });
            var container = $("<span></span>").css({
            //    position: "relative",
//                top: barTopPos + 120,
       //         left: barLeftPos,
                "font-size": "75%",
                "text-align":'left',
                display: "inline-block",
                float:'left',
                width: "100%"
            });
          
          
            var passIndi = $('<div id="PasswordStrengthBorder"><div id="PasswordStrengthBar" class="BarIndicator"></div></div>').css({
//                position: "relative",
                display: "none"
            }).eq(0).css({
                height: 4,
                //                top: barTopPos + 110,
                float: 'left',
                left: barLeftPos,
                "border-style": "solid",
                "border-width": 1,
                "margin-top" : 10,
                padding: 2
            }).end().eq(1).css({
                height: 5,
//                top: barTopPos + 112,
                left: barLeftPos
            }).end();
            maincontainer.html(passIndi);
            maincontainer.append(container);
            $(this).after(maincontainer);
            $(this).keyup(function () {
                var passwordVal = $(this).val();
                password_settings.metRequirement = false;
                if (passwordVal.length > 0) {
                    var msgNstrength = password_Strength.getStrengthInfo(passwordVal);
                    var msgNstrength_array = msgNstrength.split(";"),
                        strengthPercent = 0,
                        barWidth = password_settings.barWidth,
                        backColor = password_settings.barColor;
                    if (msgNstrength_array.length > 1) {
                        strengthPercent = (msgNstrength_array[1] / password_settings.minLength) * barWidth;
                    }
                    $("[id$='PasswordStrengthBorder']").css({
                        display: "inline-block",
                        width: barWidth
                    });
                    if (password_settings.useMultipleColors === "1") {
                        if (parseInt(strengthPercent) >= 0 && parseInt(strengthPercent) <= (barWidth * 0.33)) {
                            backColor = "red";
                        } else {
                            if (parseInt(strengthPercent) >= (barWidth * 0.33) && parseInt(strengthPercent) <= (barWidth * 0.67)) {
                                backColor = "blue";
                            } else {
                                backColor = password_settings.barColor;
                            }
                        }
                    }
                    $("[id$='PasswordStrengthBar']").css({
                        display: "inline-block",
                        width: strengthPercent,
                        height: 4,
                        float: 'left',
                        "background-color": backColor
                    });
                    if (msgNstrength_array[0].lastIndexOf(",") !== -1) {
                        container.text(msgNstrength_array[0].substring(0, msgNstrength_array[0].length - 2));
                    } else {
                        container.text(msgNstrength_array[0]);
                    } if (strengthPercent == barWidth) {
                        password_settings.metRequirement = true;
                    }
                } else {
                    container.text("");
                    $("[id$='PasswordStrengthBorder']").css("display", "none");
                    $("[id$='PasswordStrengthBar']").css("display", "none");
                }
            });
        });
    };
})(jQuery);