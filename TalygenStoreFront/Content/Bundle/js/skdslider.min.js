!function (e) { e.skdslider = function (t, n) { var l = { delay: 2e3, animationSpeed: 500, showNav: !0, autoSlide: !0, showNextPrev: !1, pauseOnHover: !1, numericNav: !1, stopSlidingAfter: !1, showPlayButton: !1, animationType: "fading" }; n && e.extend(l, n), l.touch = !0, "ontouchstart" in window || window.DocumentTouch; var a = window.navigator.userAgent, r = a.indexOf("MSIE "); if (r > 0) { var s = parseInt(a.substring(r + 5, a.indexOf(".", r))); l.touch = s > 8 } e(t).wrap('<div class="skdslider"></div>'); var d = e(t).closest("div.skdslider"); d.find("ul").addClass("slides"); var o = d.find("ul.slides li"); if (l.currentSlide = 0, l.currentState = "pause", l.running = !1, l.stopSlidingAfter && ("all" == l.stopSlidingAfter && (l.stopSlidingAfter = o.length), l.stopSlidingAfter -= 1), "fading" == l.animationType && o.each(function () { e(this).css({ position: "absolute", left: "0", top: "0", bottom: "0", right: "0" }) }), "sliding" == l.animationType) { o.each(function () { e(this).css({ float: "left", display: "block", position: "relative" }) }); var u = d.outerWidth() * o.size(); d.find("ul.slides").css({ position: "absolute", left: "0", width: u }), o.css({ width: d.outerWidth(), height: d.outerHeight() }), e(window).resize(function () { var e = d.outerWidth() * o.size(); d.find("ul.slides").css({ position: "absolute", left: "0", width: e }), o.css({ width: d.outerWidth(), height: d.outerHeight() }) }) } l.touch && e.skdslider.enableTouch(d, o, l), e.skdslider.createNav(d, o, l), o.eq(0).show(), !0 == l.autoSlide && (l.currentState = "play", l.interval = setTimeout(function () { e.skdslider.playSlide(d, o, l) }, l.delay)), !0 == l.pauseOnHover && o.hover(function () { !0 == l.autoSlide && (l.currentState = "pause", clearTimeout(l.interval)) }, function () { !0 == l.autoSlide && (l.currentState = "play", !0 == l.autoSlide && e.skdslider.playSlide(d, o, l)) }) }, e.skdslider.createNav = function (t, n, l) { var a = '<ul class="slide-navs">'; for (i = 0; i < n.length; i++) { var r = ""; !0 == l.numericNav && (r = i + 1), 0 == i ? a += '<li class="current-slide slide-nav-' + i + '"><a>' + r + "</a></li>" : a += '<li class="slide-nav-' + i + '"><a>' + r + "</a></li>" } if (a += "</ul>", !0 == l.showNav) { t.append(a); var s = t.find(".slide-navs")[0].offsetWidth; s = parseInt(s / 2), s *= -1, t.find(".slide-navs").css("margin-left", s), t.find(".slide-navs li").click(function () { return targetSlide = index = t.find(".slide-navs li").index(this), clearTimeout(l.interval), l.currentState = "play", l.running = !1, e.skdslider.playSlide(t, n, l, targetSlide), !1 }) } if (!0 == l.showNextPrev) { var d = '<a class="prev"></a>'; d += '<a class="next"></a>', t.append(d), t.find("a.prev").click(function () { e.skdslider.prev(t, n, l) }), t.find("a.next").click(function () { e.skdslider.next(t, n, l) }) } if (!0 == l.showPlayButton) { var o = "play" == l.currentState || !0 == l.autoSlide ? '<a class="play-control pause"></a>' : '<a class="play-control play"></a>'; t.append(o), t.hover(function () { t.find("a.play-control").css("display", "block") }, function () { t.find("a.play-control").css("display", "none") }), t.find("a.play-control").click(function () { return !0 == l.autoSlide ? (clearTimeout(l.interval), l.autoSlide = !1, l.currentState = "pause", e(this).addClass("play"), e(this).removeClass("pause")) : (l.currentState = "play", l.autoSlide = !0, e(this).addClass("pause"), e(this).removeClass("play"), targetSlide = l.currentSlide + 1 == n.length ? 0 : l.currentSlide + 1, clearTimeout(l.interval), e.skdslider.playSlide(t, n, l, targetSlide)), !1 }) } }, e.skdslider.next = function (t, n, l) { return targetSlide = l.currentSlide + 1 == n.length ? 0 : l.currentSlide + 1, clearTimeout(l.interval), l.currentState = "play", e.skdslider.playSlide(t, n, l, targetSlide), !1 }, e.skdslider.prev = function (t, n, l) { return targetSlide = 0 == l.currentSlide ? n.length - 1 : l.currentSlide - 1, clearTimeout(l.interval), l.currentState = "play", l.running = !1, e.skdslider.playSlide(t, n, l, targetSlide), !0 }, e.skdslider.prev = function (t, n, l) { return targetSlide = 0 == l.currentSlide ? n.length - 1 : l.currentSlide - 1, clearTimeout(l.interval), l.currentState = "play", l.running = !1, e.skdslider.playSlide(t, n, l, targetSlide), !0 }, e.skdslider.playSlide = function (t, n, l, a) { if ("play" == l.currentState && !1 == l.running) { if (t.find(".slide-navs li").removeClass("current-slide"), void 0 === a && (a = l.currentSlide + 1 == n.length ? 0 : l.currentSlide + 1), "fading" == l.animationType && (l.running = !0, n.eq(l.currentSlide).fadeOut(l.animationSpeed), n.eq(a).fadeIn(l.animationSpeed, function () { e.skdslider.removeIEFilter(e(this)[0]), l.running = !1 })), "sliding" == l.animationType) { var r = -(a * t.outerWidth() * 1); l.running = !0, t.find("ul.slides").animate({ left: r }, l.animationSpeed, function () { l.running = !1 }) } t.find(".slide-navs li").eq(a).addClass("current-slide"), l.currentSlide = a } l.stopSlidingAfter && l.stopSlidingAfter == l.currentSlide && (clearTimeout(l.interval), l.autoSlide = !1, l.currentState = "pause", t.find("a.play-control").addClass("play"), t.find("a.play-control").removeClass("pause")), !0 == l.autoSlide && "play" == l.currentState && (l.interval = setTimeout(function () { e.skdslider.playSlide(t, n, l) }, l.delay)) }, e.skdslider.enableTouch = function (t, n, l) { var a, r, s, d; function o(e) { e.preventDefault(); var t = e.touches[0].pageX, n = e.touches[0].pageY; s = a - t, d = r - n } function u(a) { t[0].removeEventListener("touchmove", o, !1), s > 0 ? e.skdslider.next(t, n, l) : e.skdslider.prev(t, n, l), t[0].removeEventListener("touchend", u, !1) } t[0].addEventListener("touchstart", function e(n) { a = n.touches[0].pageX, r = n.touches[0].pageY, t[0].addEventListener("touchmove", o, !1), t[0].addEventListener("touchend", u, !1) }, !1) }, e.skdslider.removeIEFilter = function (e) { e.style.removeAttribute && e.style.removeAttribute("filter") }, e.fn.skdslider = function (t) { return this.each(function () { new e.skdslider(this, t) }) } }(jQuery);